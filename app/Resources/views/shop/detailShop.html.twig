{% extends 'base.html.twig' %}


{% block body %}
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBHE0hQqRcgMyLXnDFBI_RtMAaH58E3YQY&callback=initMap&language=fr"
   async defer>
   </script>


   <script>
        var map;
      function initialize() {
        var mapOptions = {
          zoom: 7,
          center: {lat:{{unshop.lattitude}},lng:{{unshop.longitude}}}
        };
        map = new google.maps.Map(document.getElementById('map'),
            mapOptions);

        var marker = new google.maps.Marker({
          // The below line is equivalent to writing:
          // position: new google.maps.LatLng(-34.397, 150.644)
          position: { lat:{{unshop.lattitude}},lng:{{unshop.longitude}} },
         
          map: map
        });

        // You can use a LatLng literal in place of a google.maps.LatLng object when
        // creating the Marker object. Once the Marker object is instantiated, its
        // position will be available as a google.maps.LatLng object. In this case,
        // we retrieve the marker's position using the
        // google.maps.LatLng.getPosition() method.
        var infowindow = new google.maps.InfoWindow({
          content: '<p>Marker Location:' + marker.getPosition() + '</p>'
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.open(map, marker);
        });
      }

      google.maps.event.addDomListener(window, 'load', initialize);

   </script>


<table class="table">
 <tr><td>map : </td> <td><div id="map" style="height:350px;" ></div></td></tr>
 <tr><td>Nom : </td> <td>{{unshop.name}}</td></tr>
 <tr><td>Téléphone : </td><td>{{unshop.telephone}}</td></tr>
<tr><td>adresse : </td><td>{{unshop.adresse}}</td></tr>
<tr><td>Utilisateur : </td><td>{{unshop.user.firstname}}</td></tr>
 <tr><td></td>
<td><a class="btn btn-default" href="{{path('listShop')}} " role="button">retour</a></td></tr>
<!-- lat: 35.8253900, lng:10.6369900!-->
</table>
  

 
{% endblock %}